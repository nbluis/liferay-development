/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.training.library.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the Book service. Represents a row in the &quot;Library_Book&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.training.library.model.impl.BookModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.training.library.model.impl.BookImpl}.
 * </p>
 *
 * @author Eduardo Bohrer
 * @see Book
 * @see com.liferay.training.library.model.impl.BookImpl
 * @see com.liferay.training.library.model.impl.BookModelImpl
 * @generated
 */
public interface BookModel extends BaseModel<Book> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a book model instance should use the {@link Book} interface instead.
	 */

	/**
	 * Gets the primary key of this book.
	 *
	 * @return the primary key of this book
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this book
	 *
	 * @param pk the primary key of this book
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the book id of this book.
	 *
	 * @return the book id of this book
	 */
	public long getBookId();

	/**
	 * Sets the book id of this book.
	 *
	 * @param bookId the book id of this book
	 */
	public void setBookId(long bookId);

	/**
	 * Gets the company id of this book.
	 *
	 * @return the company id of this book
	 */
	public long getCompanyId();

	/**
	 * Sets the company id of this book.
	 *
	 * @param companyId the company id of this book
	 */
	public void setCompanyId(long companyId);

	/**
	 * Gets the group id of this book.
	 *
	 * @return the group id of this book
	 */
	public long getGroupId();

	/**
	 * Sets the group id of this book.
	 *
	 * @param groupId the group id of this book
	 */
	public void setGroupId(long groupId);

	/**
	 * Gets the publisher id of this book.
	 *
	 * @return the publisher id of this book
	 */
	public long getPublisherId();

	/**
	 * Sets the publisher id of this book.
	 *
	 * @param publisherId the publisher id of this book
	 */
	public void setPublisherId(long publisherId);

	/**
	 * Gets the title of this book.
	 *
	 * @return the title of this book
	 */
	public String getTitle();

	/**
	 * Gets the localized title of this book. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale to get the localized title for
	 * @return the localized title of this book
	 */
	public String getTitle(Locale locale);

	/**
	 * Gets the localized title of this book, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local to get the localized title for
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this book. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	public String getTitle(Locale locale, boolean useDefault);

	/**
	 * Gets the localized title of this book. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the id of the language to get the localized title for
	 * @return the localized title of this book
	 */
	public String getTitle(String languageId);

	/**
	 * Gets the localized title of this book, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the id of the language to get the localized title for
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this book
	 */
	public String getTitle(String languageId, boolean useDefault);

	/**
	 * Gets a map of the locales and localized title of this book.
	 *
	 * @return the locales and localized title
	 */
	public Map<Locale, String> getTitleMap();

	/**
	 * Sets the title of this book.
	 *
	 * @param title the title of this book
	 */
	public void setTitle(String title);

	/**
	 * Sets the localized title of this book.
	 *
	 * @param locale the locale to set the localized title for
	 * @param title the localized title of this book
	 */
	public void setTitle(Locale locale, String title);

	/**
	 * Sets the localized titles of this book from the map of locales and localized titles.
	 *
	 * @param titleMap the locales and localized titles of this book
	 */
	public void setTitleMap(Map<Locale, String> titleMap);

	/**
	 * Gets the author name of this book.
	 *
	 * @return the author name of this book
	 */
	@AutoEscape
	public String getAuthorName();

	/**
	 * Sets the author name of this book.
	 *
	 * @param authorName the author name of this book
	 */
	public void setAuthorName(String authorName);

	/**
	 * Gets the publication date of this book.
	 *
	 * @return the publication date of this book
	 */
	public Date getPublicationDate();

	/**
	 * Sets the publication date of this book.
	 *
	 * @param publicationDate the publication date of this book
	 */
	public void setPublicationDate(Date publicationDate);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Book book);

	public int hashCode();

	public Book toEscapedModel();

	public String toString();

	public String toXmlString();
}